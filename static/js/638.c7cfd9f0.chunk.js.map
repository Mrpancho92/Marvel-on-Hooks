{"version":3,"file":"static/js/638.c7cfd9f0.chunk.js","mappings":"qLAwEA,UA3DmB,SAAHA,GAA+B,IAA1BC,EAASD,EAATC,UAAWC,EAAQF,EAARE,SACpBC,GAAOC,EAAAA,EAAAA,MAAPD,GACRE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA0FC,EAAAA,EAAAA,KAA5DC,EAAQF,EAARE,SAAUC,EAAUH,EAAVG,WAAYC,EAAYJ,EAAZI,aAAcC,EAAOL,EAAPK,QAASC,EAAUN,EAAVM,YAE3EC,EAAAA,EAAAA,YAAU,WACNC,GACJ,GAAG,CAAChB,IAEJ,IAAMgB,EAAa,WAGf,OAFAL,IAEQZ,GACJ,IAAK,QACDW,EAASV,GAAIiB,KAAKC,GAAcD,MAAK,kBAAMH,EAAW,YAAY,IAClE,MACJ,IAAK,YACDF,EAAaZ,GAAIiB,KAAKC,GAAcD,MAAK,kBAAMH,EAAW,YAAY,IAIlF,EAEMI,EAAe,SAACZ,GAClBC,EAAQD,EACZ,EAMA,OACIa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,KACTC,EAAAA,EAAAA,GAAWX,EAASf,EAAWQ,KAM5C,C,wFClCA,EAjBiB,WACb,OACIa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,eAAcJ,SAAC,kDAC5BF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,WAAUJ,SAAA,EACrBF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,yBAAwBJ,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4BACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6BAEnBH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAI/B,ECCA,EAdmB,SAACZ,EAASf,EAAWQ,GACpC,OAAQO,GACJ,IAAK,UACD,OAAOS,EAAAA,EAAAA,KAACI,EAAQ,IACpB,IAAK,UACD,OAAOJ,EAAAA,EAAAA,KAACK,EAAAA,EAAO,IACnB,IAAK,YACD,OAAOL,EAAAA,EAAAA,KAACxB,EAAS,CAACQ,KAAMA,IAC5B,IAAK,QACD,OAAOgB,EAAAA,EAAAA,KAACM,EAAAA,EAAY,IACxB,QACI,MAAM,IAAIC,MAAM,4BAE5B,C","sources":["components/pages/SinglePage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport useMarvelService from '../../services/MarvelService';\r\n// import Spinner from '../spinner/Spinner';\r\n// import ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport setContent from '../../utils/setContent';\r\n\r\n\r\n// Хотелось бы вынести функцию по загрузке данных как отдельный аргумент\r\n// Но тогда мы потеряем связь со стэйтами загрузки и ошибки\r\n// А если вынесем их все в App.js - то они будут одни на все страницы\r\n\r\nconst SinglePage = ({Component, dataType}) => {\r\n    const { id } = useParams();\r\n    const [data, setData] = useState(null);\r\n    const {/*  loading, error, */ getComic, clearError, getCharacter, process, setProcess } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        updateData();\r\n    }, [id]);\r\n\r\n    const updateData = () => {\r\n        clearError();\r\n\r\n        switch (dataType) {\r\n            case 'comic':\r\n                getComic(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                break;\r\n            case 'character':\r\n                getCharacter(id).then(onDataLoaded).then(() => setProcess('confirmed'));\r\n                break;\r\n            default: break;\r\n        }\r\n    }\r\n\r\n    const onDataLoaded = (data) => {\r\n        setData(data);\r\n    }\r\n\r\n    // const errorMessage = error ? <ErrorMessage /> : null;\r\n    // const spinner = loading ? <Spinner /> : null;\r\n    // const content = !(loading || error || !data) ? <Component data={data} /> : null;\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            {setContent(process, Component, data)}\r\n            {/* {errorMessage}\r\n            {spinner}\r\n            {content} */}\r\n        </>\r\n    )\r\n}\r\n\r\n// const View = ({ comic }) => {\r\n//     const {title, description, pageCount, thumbnail, language, price} = comic;\r\n//     return (\r\n//         <div className=\"single-comic\">\r\n//             <img src={thumbnail} alt={title} className=\"single-comic__img\" />\r\n//             <div className=\"single-comic__info\">\r\n//                 <h2 className=\"single-comic__name\">{title}</h2>\r\n//                 <p className=\"single-comic__descr\">{description}</p>\r\n//                 <p className=\"single-comic__descr\">{pageCount}</p>\r\n//                 <p className=\"single-comic__descr\">Language: {language}</p>\r\n//                 <div className=\"single-comic__price\">{price}</div>\r\n//             </div>\r\n//             <Link to=\"/comics\" className=\"single-comic__back\">Back to all</Link>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport default SinglePage;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\r\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\r\nimport Skeleton from '../components/skeleton/Skeleton';\r\n\r\nconst setContent = (process, Component, data) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Skeleton/>;\r\n        case 'loading':\r\n            return <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component data={data} />;\r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\nexport default setContent;"],"names":["_ref","Component","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","data","setData","_useMarvelService","useMarvelService","getComic","clearError","getCharacter","process","setProcess","useEffect","updateData","then","onDataLoaded","_jsxs","_Fragment","children","_jsx","AppBanner","setContent","className","Skeleton","Spinner","ErrorMessage","Error"],"sourceRoot":""}