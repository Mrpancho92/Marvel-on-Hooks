{"version":3,"file":"static/js/425.483e2306.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef} from 'react';\nimport {Link} from 'react-router-dom';\nimport './comicsList.scss';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nconst setContent = (process, Component, newItemLoading) => {\n    switch (process) {\n        case 'waiting':\n            return <Spinner/>;\n        case 'loading':\n            return newItemLoading ? <Component/> : <Spinner/>;\n        case 'confirmed':\n            return <Component/>;\n        case 'error':\n            return <ErrorMessage/>;\n        default:\n            throw new Error('Unexpected process state');\n    }\n}\n\nconst ComicsList = () => {\n    const [comicsList, setComicsList] = useState([]);\n    const [newComicsLoading, setNewComicsLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n    \n  \n    const {/* loading, error, */ getAllComics, process, setProcess} =  useMarvelService();\n    \n     useEffect(() => {\n            onRequest(offset , true);\n             // eslint-disable-next-line\n     }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setNewComicsLoading(false) : setNewComicsLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n            .then(() => setProcess('confirmed'))  \n    }\n    \n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setNewComicsLoading(newComicsLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n    const itemRefs = useRef([]);\n\n    const focusOnItem = (id) => {\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    function renderComicsItems(arr) { \n        const items = arr.map((item, index) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n            return (\n                <li\n                    className=\"comics__item\"\n                    tabIndex={0}\n                    ref={el => itemRefs.current[index] = el}\n                    key={item.id}\n                    onClick={() => {focusOnItem(index);}}\n                    onKeyDown={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            focusOnItem(index);\n                        }\n                    }}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img className=\"comics__item-img\" src={item.thumbnail} alt={item.name} style={imgStyle} />\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n        // Добавлен доп фильтр на удаление дубликатов в items, без понятия почему они там образуются.\n        // const newItems = items.filter((value, index, self) =>\n        // index === self.findIndex((t) => (t.key === value.key)))\n        // Ответ на свой же вопрос: useEffect вызывается 2 раза при рендере несмотря на пустой массив зависимостей. StrictMode выполняет рендеринг компонентов дважды в development режиме, но не в production. По мнению разработчиков React - это позволяет обнаружить некоторые проблемы в вашем коде, если таковые будут и предупредить Вас об этом. Если вместо нового рендеринга через createRoot использовать старый через render, то эффенкт будет вызываться 1 раз как и должен. Это касается как 17го, таки 18го реакта, но 18й выдаёт предупреждение о том, что старый рендер устарел. Короче убрал я StrictMode и useEffect теперь вызывается 1 раз!\n        \n        // А эта конструкция вынесена для центровки спиннера/ошибки\n        return (\n            <ul\n                className=\"comics__grid\">\n                {items}\n            </ul>\n\n        )\n    }\n\n    // const items = renderComicsItems(comicsList);\n    // const errorMessage = error ? <ErrorMessage /> : null;\n    // const spinner = loading && !newComicsLoading ? <Spinner /> : null;\n    return (\n        <div className=\"comics__list\">\n           {setContent(process, () => renderComicsItems(comicsList), newComicsLoading)}\n            {/* {errorMessage}\n            {spinner} */}\n            {/* {content} */}\n            {/* {items} */}\n            <button\n                className=\"button button__main button__long\"\n                disabled={newComicsLoading}\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n\n\n    // return (\n    //     <div className=\"comics__list\">\n    //         <ul className=\"comics__grid\">\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n    //                     <div className=\"comics__item-price\">9.99$</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n    //                     <div className=\"comics__item-price\">NOT AVAILABLE</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n    //                     <div className=\"comics__item-price\">9.99$</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n    //                     <div className=\"comics__item-price\">NOT AVAILABLE</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n    //                     <div className=\"comics__item-price\">9.99$</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n    //                     <div className=\"comics__item-price\">NOT AVAILABLE</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={uw} alt=\"ultimate war\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">ULTIMATE X-MEN VOL. 5: ULTIMATE WAR TPB</div>\n    //                     <div className=\"comics__item-price\">9.99$</div>\n    //                 </a>\n    //             </li>\n    //             <li className=\"comics__item\">\n    //                 <a href=\"#\">\n    //                     <img src={xMen} alt=\"x-men\" className=\"comics__item-img\"/>\n    //                     <div className=\"comics__item-name\">X-Men: Days of Future Past</div>\n    //                     <div className=\"comics__item-price\">NOT AVAILABLE</div>\n    //                 </a>\n    //             </li>\n    //         </ul>\n    //         <button className=\"button button__main button__long\">\n    //             <div className=\"inner\">load more</div>\n    //         </button>\n    //     </div>\n    // )\n}\n\nexport default ComicsList;","import { Helmet } from \"react-helmet\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content=\"Page with list of our comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\nexport default ComicsPage;"],"names":["setContent","process","Component","newItemLoading","_jsx","Spinner","ErrorMessage","Error","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newComicsLoading","setNewComicsLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useMarvelService","getAllComics","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","concat","_toConsumableArray","itemRefs","useRef","focusOnItem","id","current","forEach","item","classList","remove","add","focus","_jsxs","className","children","arr","items","map","index","imgStyle","thumbnail","tabIndex","ref","el","onClick","onKeyDown","e","key","Link","to","src","alt","name","style","title","price","renderComicsItems","disabled","_Fragment","Helmet","content","AppBanner","ComicsList"],"sourceRoot":""}